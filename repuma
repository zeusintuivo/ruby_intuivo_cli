#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
#
CYAN="\033[01;36m"
YELLOW="\033[01;33m"
PURPLE="\033[01;35m"
RED="\033[01;31m"
GREEN="\033[01;32m"
echo -e "${RED}"
sudo service nginx stop
echo -e "${RED}"
sudo /etc/init.d/pumacontrol.sh stop
bundle install
(
    echo -e "${PURPLE} Action requesting: start"
    started=$(sudo /etc/init.d/pumacontrol.sh start  2>&1 )&
    echo -e "${GREEN} $started"
)
wait
(
    # Note doing this '-e' forces the file system,  to search the file and always find it
    # thought it seems like useless statement, it helps the file system catch up
    # with the processing. This could be a bug out of our control.
    echo "Waiting.."


        WAITINGFOR=$(sudo /etc/init.d/pumacontrol.sh status  2>&1 ) #  capture all stout sdout output
        COUNTER=0
        echo -e "$WAITINGFOR"
        while [[ "${WAITINGFOR}" != *"puma is running"* ]] && [ $COUNTER -lt 10 ] ; do
        {

            if [[ "${started}" == *"Could not find "* ]] && [[ "${started}" == *" in any of the sources"* ]] && [[ "${started}" == *"Run "* ]] && [[ "${started}" == *" to install missing gems"* ]] ; then
            {
                echo "Bundle installing..."
                bundle_install=$(bundle install  2>&1 ) #  capture all stout sdout output
                wait
                if [[ "${bundle_install}" == *"Make sure that "* ]] && [[ "${bundle_install}" == *" succeeds before bundling."* ]] ; then
                {
                    echo "Gem installing..."
                    gem_install=$(echo "${bundle_install}"| sed -n "/Make\ sure\ that/,/succeeds/p" | head -1 | sed 's/Make\ sure\ that\ .//g' | sed 's/succeeds\ before\ bundling.//g')
                    echo "Gem install --- $gem_install"
                    $gem_install
                    wait
                }
                fi
                COUNTER=0
            }
            fi
            new_color=$(( $COUNTER + 66 ))
            echo -e "${YELLOW}...................\\033[38;5;${new_color}m waiting for puma to start ${COUNTER}"
            # Provides a delay to allow or puma to start. A Pausa of 3 seconds when -c3
            pingres=$(ping localhost -c3)
            WAITINGFOR=$(sudo /etc/init.d/pumacontrol.sh status  2>&1 ) #  capture all stout sdout output
            echo -e "\\033[01;36m $WAITINGFOR" | tail -1
            if  [ $COUNTER -gt 2 ] && [ ! -e '/_/weise/config/server/puma.rb' ] ; then
            {
                echo -e "${RED} WAITING FOR file SYSTEM TO CATCH UP .. ONCE MORE!!"
                started=$(sudo /etc/init.d/pumacontrol.sh start  2>&1 )&
            }
            fi
            if  [ $COUNTER -gt 9 ] && [ ! -e '/_/weise/shared/sockets/puma.sock' ] ; then
            {
                echo -e "${RED} NOT STARTED YET MORE!!"
                started=$(sudo /etc/init.d/pumacontrol.sh start  2>&1 )
                COUNTER=0
            }
            fi
            (( COUNTER++ ))
        }
        done


    echo -e "${WAITINGFOR}"
    if [[ "${WAITINGFOR}" == *"puma is not running"* ]] ; then
    {
        echo -e "${RED} ERROR! Failed to start puma "
    }
    else
    {
        echo -e "${GREEN}"
        restart=$(sudo service nginx start)&
        echo -e "$restart"

    }
    fi
)
(
    if [[ "${WAITINGFOR}" == *"puma is running"* ]] ; then
    {
        echo -e "${CYAN}"
        restart=$(sudo service nginx start)&
        echo -e "$restart"
    }
    fi
)
